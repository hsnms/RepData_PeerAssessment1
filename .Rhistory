`fBodyAccJerk-mean()-X`,`fBodyAccJerk-mean()-Y`,`fBodyAccJerk-mean()-Z`,
`fBodyAccJerk-std()-X`, `fBodyAccJerk-std()-Y`,`fBodyAccJerk-std()-Z`,
`fBodyGyro-mean()-X`,`fBodyGyro-mean()-Y`, `fBodyGyro-mean()-Z`,
`fBodyGyro-std()-X`, `fBodyGyro-std()-Y`, `fBodyGyro-std()-Z`,
`fBodyAccMag-mean()`,`fBodyAccMag-std()`, `fBodyBodyAccJerkMag-mean()`,`fBodyBodyAccJerkMag-std()`,
`fBodyBodyGyroMag-mean()`,`fBodyBodyGyroMag-std()`,`fBodyBodyGyroJerkMag-mean()`,`fBodyBodyGyroJerkMag-std()`,
`angle(tBodyAccMean,gravity)`,`angle(tBodyAccJerkMean),gravityMean)`,`angle(tBodyGyroMean,gravityMean)`,
`angle(tBodyGyroJerkMean,gravityMean)`, `angle(X,gravityMean)`,`angle(Y,gravityMean)`,`angle(Z,gravityMean)`"
gsub("'",'"',l)
gsub("`",'"',l)
gsub("`",'"',l)
item<-c("tBodyAcc-mean()-X","tBodyAcc-mean()-Y", "tBodyAcc-mean()-Z",
"tBodyAcc-std()-X", "tBodyAcc-std()-Y","tBodyAcc-std()-Z",
"tGravityAcc-mean()-X", "tGravityAcc-mean()-Y","tGravityAcc-mean()-Z",
"tGravityAcc-std()-X", "tGravityAcc-std()-Y", "tGravityAcc-std()-Z",
"tBodyAccJerk-mean()-X", "tBodyAccJerk-mean()-Y","tBodyAccJerk-mean()-Z",
"tBodyAccJerk-std()-X", "tBodyAccJerk-std()-Y","tBodyAccJerk-std()-Z",
"tBodyGyro-mean()-X", "tBodyGyro-mean()-Y", "tBodyGyro-mean()-Z",
"tBodyGyro-std()-X", "tBodyGyro-std()-Y", "tBodyGyro-std()-Z",
"tBodyGyroJerk-mean()-X","tBodyGyroJerk-mean()-Y","tBodyGyroJerk-mean()-Z",
"tBodyGyroJerk-std()-X", "tBodyGyroJerk-std()-Y", "tBodyGyroJerk-std()-Z",
"tBodyAccMag-mean()","tBodyAccMag-std()","tGravityAccMag-mean()","tGravityAccMag-std()",
"tBodyAccJerkMag-mean()","tBodyAccJerkMag-std()","tBodyGyroMag-mean()","tBodyGyroMag-std()","tGravityAccMag-mean()",
"tBodyGyroJerkMag-mean()","tBodyGyroJerkMag-std()",
"fBodyAcc-mean()-X", "fBodyAcc-mean()-Y","fBodyAcc-mean()-Z",
"fBodyAcc-std()-X","fBodyAcc-std()-Y", "fBodyAcc-std()-Z",
"fBodyAccJerk-mean()-X","fBodyAccJerk-mean()-Y","fBodyAccJerk-mean()-Z",
"fBodyAccJerk-std()-X", "fBodyAccJerk-std()-Y","fBodyAccJerk-std()-Z",
"fBodyGyro-mean()-X","fBodyGyro-mean()-Y", "fBodyGyro-mean()-Z",
"fBodyGyro-std()-X", "fBodyGyro-std()-Y", "fBodyGyro-std()-Z",
"fBodyAccMag-mean()","fBodyAccMag-std()", "fBodyBodyAccJerkMag-mean()","fBodyBodyAccJerkMag-std()",
"fBodyBodyGyroMag-mean()","fBodyBodyGyroMag-std()","fBodyBodyGyroJerkMag-mean()","fBodyBodyGyroJerkMag-std()",
"angle(tBodyAccMean,gravity)","angle(tBodyAccJerkMean),gravityMean)","angle(tBodyGyroMean,gravityMean)",
"angle(tBodyGyroJerkMean,gravityMean)", "angle(X,gravityMean)","angle(Y,gravityMean)","angle(Z,gravityMean)")
item
item<-c("tBodyAcc-mean()-X","tBodyAcc-mean()-Y", "tBodyAcc-mean()-Z",
"tBodyAcc-std()-X", "tBodyAcc-std()-Y","tBodyAcc-std()-Z",
"tGravityAcc-mean()-X", "tGravityAcc-mean()-Y","tGravityAcc-mean()-Z",
"tGravityAcc-std()-X", "tGravityAcc-std()-Y", "tGravityAcc-std()-Z",
"tBodyAccJerk-mean()-X", "tBodyAccJerk-mean()-Y","tBodyAccJerk-mean()-Z",
"tBodyAccJerk-std()-X", "tBodyAccJerk-std()-Y","tBodyAccJerk-std()-Z",
"tBodyGyro-mean()-X", "tBodyGyro-mean()-Y", "tBodyGyro-mean()-Z",
"tBodyGyro-std()-X", "tBodyGyro-std()-Y", "tBodyGyro-std()-Z",
"tBodyGyroJerk-mean()-X","tBodyGyroJerk-mean()-Y","tBodyGyroJerk-mean()-Z",
"tBodyGyroJerk-std()-X", "tBodyGyroJerk-std()-Y", "tBodyGyroJerk-std()-Z",
"tBodyAccMag-mean()","tBodyAccMag-std()","tGravityAccMag-mean()","tGravityAccMag-std()",
"tBodyAccJerkMag-mean()","tBodyAccJerkMag-std()","tBodyGyroMag-mean()","tBodyGyroMag-std()","tGravityAccMag-mean()",
"tBodyGyroJerkMag-mean()","tBodyGyroJerkMag-std()",
"fBodyAcc-mean()-X", "fBodyAcc-mean()-Y","fBodyAcc-mean()-Z",
"fBodyAcc-std()-X","fBodyAcc-std()-Y", "fBodyAcc-std()-Z",
"fBodyAccJerk-mean()-X","fBodyAccJerk-mean()-Y","fBodyAccJerk-mean()-Z",
"fBodyAccJerk-std()-X", "fBodyAccJerk-std()-Y","fBodyAccJerk-std()-Z",
"fBodyGyro-mean()-X","fBodyGyro-mean()-Y", "fBodyGyro-mean()-Z",
"fBodyGyro-std()-X", "fBodyGyro-std()-Y", "fBodyGyro-std()-Z",
"fBodyAccMag-mean()","fBodyAccMag-std()", "fBodyBodyAccJerkMag-mean()","fBodyBodyAccJerkMag-std()",
"fBodyBodyGyroMag-mean()","fBodyBodyGyroMag-std()","fBodyBodyGyroJerkMag-mean()","fBodyBodyGyroJerkMag-std()",
"angle(tBodyAccMean,gravity)","angle(tBodyAccJerkMean),gravityMean)","angle(tBodyGyroMean,gravityMean)",
"angle(tBodyGyroJerkMean,gravityMean)", "angle(X,gravityMean)","angle(Y,gravityMean)","angle(Z,gravityMean)")
item
X=data.table(a1=c(1,1,1,2,2,2),a2=c(1,1,2,2,3,3),a3=1:6,a4=c(6,1:5))
library(data.table)
X=data.table(a1=c(1,1,1,2,2,2),a2=c(1,1,2,2,3,3),a3=1:6,a4=c(6,1:5))
X
name<-names(X)[1:2]
name
dots<-lapply(name,as.symbol)
group<-group_by_(.dots=dots)
library(dplyr)
dots<-lapply(name,as.symbol)
group<-group_by_(.dots=dots)
dots
dots<-lapply(name,as.symbol)
group<-group_by_(X,.dots=dots)
item<-names(X)[3:4]
summarise_each_(group,item,funs=funs(Mean="mean"))
X
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
qplot(displ,hwy,data = mpg)
swirl()
library(swirl)
swirl()
head(airquality)
range(airquality$Ozone,na.rm==TRUE)
range(airquality$Ozone,na.rm=TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month,airquality)
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone(ppb)")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone
| (ppb)",col.axis="blue",col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)",col.axis="blue",col.lab="red")
title(main="Ozone and Wind in New York City")
with(airquality,plot(Wind,Ozone))
title(main="Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par()$fg
par("pch")
par("lty")
plot(airquality$Wind,airquality$Ozone,type="n")
title(main="Wind and Ozone in NYC")
may<-subset(airquality$Month==5)
may<-airquality[airquality$Month==5]
?subset
may<-airquality[airquality,airquality$Month==5]
may<-subset(airquality,airquality$Month==5)
may <- subset(airquality, Month==5)
?points
points(may$Wind,may$Ozone,col="blue",pch=2)
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay<-subset(airquality,airquality$Month!=5)
notmay <- subset(airquality, Month!=5)
points(notmay$Wind,notmay$Ozone,col="red",pch=17)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Ozone,airquality$Solar.R,main="Ozone and Solar Radiation")
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind,airquality$Ozone,(argument main)="Ozone and Wind")
plot(airquality$Wind,airquality$Ozone,main ="Ozone and Wind")
plot(airquality$Ozone,airquality$Solar.R,main="Ozone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City",outer=TRUE)
swirl()
library(swirl)
swirl()
head(airquality)
xyplot(Ozone~Wind|data=airquality)
xyplot(Ozone~Wind|airquality)
xyplot(Ozone~Wind|,airquality)
xyplot(Ozone~Wind| airquality)
xyplot(Ozone~Wind,airquality)
xyplot(Ozone~Wind,airquality,col="red",pch=8)
xyplot(Ozone~Wind,airquality,col="red",pch=8,main="Big Apple Data")
xyplot(Ozone ~ Wind, data = airquality, pch=8, col="red",main="Big Apple Data")
xyplot(Ozone ~ Wind|as.factor(Month), data = airquality,layout=c(5,1))
xyplot(Ozone ~ Wind|Month, data = airquality,layout=c(5,1))
p<-xyplot(Ozone ~ Wind, data = airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f,layout=c(2,1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R"),local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"),local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color,diamonds$cut)
myedit(pathtofile("myLabels.R"),local=TRUE)
myedit("myLabels.R")
source(pathtofile("myLabels.R"),local=TRUE)
xyplot(price~carat|color*cut,data=diamonds,strip=FALSE,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
xyplot(price~carat|color*cut,data=diamonds,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
sample(colors(),10)
pal<-colorRamp(c("red","blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1<-colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0xcc
p2<-colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun
?rgb
p3<-colorRampPalette(c("blue","green"),alpha=.5)
p3(5)
plot(x,y,pch=19,col=rgb(0,.5,.5))
plot(x,y,pch=19,col=rgb(0,.5,.5,.3))
cols<-brewer.pal(3,"BuGn")
showMe(cols)
pal<-colorRampPalette(cols)
showMe(pal(20))
image(volcano,col=pal(20))
image(volcano,col=p1(20))
str(mpg)
qplot(displ,hwy,mpg)
qplot(displ,hwy,data=mpg)
qplot(displ,hwy,data=mpg,col=drv)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv,geom=c("point","smooth"))
qplot(y=hwy,data=mpg,color=drv)
myhigh
qplot(drv,hwy,data=mpg,geom="boxplot")
qplot(drv,hwy,data=mpg,geom="boxplot",color=manufacturer)
qplot(hwy,data=mpg,drv)
qplot(hwy, data = mpg, fill = drv)
qplot(displ,hwy,data=mpg,facets=.~drv)
qplot(hwy,data=mpg,facets=drv~.,binwidth=2)
library(swirl)
swirl()
str(diamonds)
qplot(price,data=diamonds)
range(diamonds$price)
qplot(price,data=diamonds,binwidth=18497/30)
brk
counts
qplot(price,data=diamonds,binwidth=18497/30,fill=cut)
qplot(price,data=diamonds,geom="density")
qplot(price,data=diamonds,geom="density",color=cut)
qplot(carat,price,data=diamonds)
qplot(carat,price,data=diamonds,shape=cut
)
qplot(carat,price,data=diamonds,color=cut)
qplot(carat,price,data=diamonds,color=cut,geom_smooth(method="lm"))
qplot(carat,price,data=diamonds, color=cut) +geom_smooth(method="lm")
qplot(carat,price,data=diamonds, color=cut,facets=.~cut) +geom_smooth(method="lm")
g<-ggplot(diamonds,aes(depth,price))
summary(g)
g+geom_point(alpha=1/3)
cutpoints<-quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
cutpoints
diamonds$car2<-cut(diamonds$carat,cutpoints)
g<-ggplot(diamonds,aes(depth,price))
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm",size=3,color="pink")
ggplot(diamonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind,Ozone,data=airquality)
qplot(Wind,Ozone,data=airquality)+ stats_smooth("loess")
qplot(Wind,Ozone,data=airquality, panel = panel.loess)
qplot(Wind,Ozone,data=airquality)+ geom_smooth()
qplot(Wind,Ozone,data=airquality, smooth = "loess")
library(swirl)
swirl()
dist(dataFrame)
hc<-hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5,col="blue")
abline(h=.5,col="red")
abline(h=.4,col="red")
5
12
abline(h=.05,col="green")
dist(dFsm)
hc
heatmap(dataMatrix,cm.colors(25))
heatmap(dataMatrix,col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
points(x,y,pch=19,cex=2,col=cols[newClust])
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x,newClust,mean)
tapply(y,newClust,mean)
plot(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame,centers=3)
km0bj$iter
kmobj$iter
kmObj$iter
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
kmObj$cluster
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R",local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
d
svd2(d)
svd2
svd$d
svd2$d
svd[;1:2]
svd2[;1:2]
svd2
svd2$v[,1:2]
svd2$d
dim(faceData)
a1<-(svd1$u[,1] * svd1$d[1])%*% svd1[1,]
a1<-(svd1$u[,1] * svd1$d[1])%*% t(svd1[,1])
a1<-(svd1$u[,1] * svd1$d[1])
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- svd1$u[,1] %*% svd1$d[1:2] %*% t(svd1$v[,1])
a2 <- svd1$u[,1:2] %*% svd1$d[1:2] %*% t(svd1$v[,1:2])
a2
a2 <- svd1$u[,1:2]
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage( svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage( svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
library(swirl)
swirl()
dim(ssd)
names(ssd[;562:563])
names(ssd[;c(562:563)])
names(ssd[;562])
names(ssd[562])
names(ssd[562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1<-subset(ssd,subject=1)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1[1:12])
myedit("showXY.R")
showMe(1:6)
mdist<-dist(sub1[,1:3])
hclustering<-hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
mdist<-dist(sub1[,10:12])
hclustering<-hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
svd1<-svd(scale(sub1[,c(562,563)]))
svd1<-svd(scale(sub1[,562]))
svd1<-svd(scale(sub1[562]))
svd1<-sub1[,c(562,563)]
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon<-which.max(svd1$v[,2])
mdist<-dist(sub1[,c(10:12,maxCon)])
hclustering<-hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
names(sub1[maxCon])
kClust<-kmeans(sub1[,-c(562,563)],centers=6)
table(kClust$cluster,sub1$activity)
kClust<-kmeans(sub1[,-c(562,563)],centers=6,nstart=100)
table(kClust$cluster,sub1$activity)
dim(kClust(x$y))
dim(x$y)
dim(kClust$centers)
laying<-which(kClust$size==29)
plot(kClust$centers[laying,1:12],pch=19,ylab="Laying Cluster")
names(sub1[1:3,])
names(sub1[,1:3])
walkdown<-which(kClust$size==49)
plot(kClust$centers[walkdown,1:12],pch=19,ylab="Walkdown Cluster")
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames<-strsplit(cnames, "|", fixed=T)
cnames
names(pm0)<-make.names(cnames[[1]][wcol])
head(pm0)
x0<-pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1)<-make.names(cnames[[1]][wcol])
dim(pm1)
x1<-pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative<-x1<0
sum(negative,na.rm=T)
sum(negative,na.rm=TRUE)
mean(negative,na.rm=TRUE)
dates<-pm1$Date
str(dates)
dates<-as.Date(as.character(dates),"%Y%m%d")
head(dates)
hist(dates[negative],"month")
str(site0)
both<-intersect(site0,site1)
both
head(pm0)
cnt0<-subset(pm0,pm0$State.Code==36&pm0$county.site%in%both)
cnt0<-subset(pm0,pm0$State.Code==36&pm0$county.site %in% both)
cnt0<-subset(pm0,State.Code==36&county.site %in% both)
cnt1<-subset(pm1,State.Code==36&county.site %in% both)
sapply(split(cnt0,cnt0$county.site),nrow)
sapply(split(cnt1,cnt1$county.site),nrow)
pm0sub<-subset(cnt0,County.Code==63$Site.ID==2008)
pm0sub<-subset(cnt0,pm0$County.Code==63&pm0$Site.ID==2008)
pm0sub<-subset(cnt0,County.Code==63&Site.ID==2008)
pm1sub<-subset(cnt1,County.Code==63&Site.ID==2008)
x0sub<-pm0sub$Sample.Value
x1sub<-pm1sub$Sample.Value
dates0<-as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1<-as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow=c(1,2),mar=c(4,4,2,1))
plot(dates0,x0sub,pch=20)
abline(median(x0sub,na.rm=TRUE),lwd=2)
abline(lwd=2)
abline(h = median(x0sub, na.rm = TRUE),lwd=2)
plot(dates1,x1sub,pch=20)
abline(h = median(x1sub, na.rm = TRUE),lwd=2)
rng<-range(x0sub,x1sub,na.rm==TRUE)
rng<-range(x0sub,x1sub,na.rm=TRUE)
rng
mn0<-with(pm0,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn0)
mn1<-with(pm1,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0<-data.frame(state=names(mn0),mean=mn0)
d01<-data.frame(state=names(mn1),mean=mn1)
d1<-data.frame(state=names(mn1),mean=mn1)
mrg<-merge(d0,d1,b="state")
mrg<-merge(d0,d1,by="state")
dim(mrg)
head(mrg)
with(mrg,plot(rep(1,52),mrg[,2],xlim=c(.5,2.5)))
with(mrg,points(rep(2,52),mrg[,3]))
segments(rep(1,52),mrg[,2],rep(2,52),mrg[,3])
mrg[mrg$mean.x < mrg$mean.y, ]
setwd("/Users/shengnanhuang/Documents/data/Course 5, week 2/")
a<-read.csv("./activity.csv")
b<-a[!is.na(a$steps),]
d<-tapply(b$steps,b$interval,mean)
d2<-data.frame(interval=rep(1,length(d)),steps=rep(1,length(d)))
d2$interval<-names(d)
d2$steps<-d
for (i in 1:length(d2$interval)){
a[is.na(a$steps)&a$interval==d2$interval[i],]$steps<-d2$steps[i]
}
e<-tapply(a$steps,as.character(a$date),sum)
mean(e)
median(e)
hist(e)
library(dplyr)
aa<-mutate(a,w=ifelse(weekdays(as.Date(date))=="Saturday"|as.Date(date)=="Sunday","weekend","weekday"))
aa<-mutate(a,w=ifelse(weekdays(as.Date(date))=="Saturday"|weekdays(as.Date(date))=="Sunday","weekend","weekday"))
head(aa)
head(aa[aa$w="weekend",])
head(aa[aa$w=="weekend",])
aa1<-tapply(aa[aa$w=="weekday",]$steps,aa[aa$w=="weekday",]$interval,mean)
head(aa1)
aa2<-tapply(aa[aa$w=="weekend",]$steps,aa[aa$w=="weekend",]$interval,mean)
head(aa2)
par(mfrow=c(2,1))
plot(aa1,type="l", xlab="Time interval", ylab="Average number of steps", main="Weekday")
plot(aa2,type="l", xlab="Time interval", ylab="Average number of steps", main="Weekend")
aa3<-data.frame(interval=rep(1,length(aa1)),steps=rep(1,length(aa1)))
aa3$interval<-names(aa1)
aa3$steps<-aa1
aa4<-data.frame(interval=rep(1,length(aa2)),steps=rep(1,length(aa2)))
aa4$interval<-names(aa2)
aa4$steps<-aa2
par(mfrow=c(2,1))
plot(aa3,type="l", xlab="Time interval", ylab="Average number of steps", main="Weekday")
plot(aa4,type="l", xlab="Time interval", ylab="Average number of steps", main="Weekend")
setwd("/Users/shengnanhuang/Documents/data/RepData_PeerAssessment1/")
a<-read.csv(unz("activity.zip","activity,csv"))
a<-read.csv("activity,csv")
a<-read.csv("./activity,csv")
setwd("/Users/shengnanhuang/Documents/data/Course 5, week 2/")
a<-read.csv("./activity.csv")
head(a)
setwd("/Users/shengnanhuang/Documents/data/RepData_PeerAssessment1/")
a<-read.csv("./activity.csv")
head(a)
a<-read.csv(unz("./activity.zip"))
a<-read.csv(unz("./activity.zip","activity.csv"))
head(a)
setwd("/Users/shengnanhuang/Documents/data/RepData_PeerAssessment1/")
a<-read.csv(unz("./activity.zip","activity,csv"))
a<-read.csv(unz("./activity.zip","activity.csv"))
getwd()
setwd("/Users/shengnanhuang/Documents/data/RepData_PeerAssessment1/")
aaa<-read.csv(unz("./activity.zip","activity,csv"))
aaa<-read.csv(unz("./activity.zip","activity.csv"))
head(aaa)
